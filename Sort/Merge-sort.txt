/* 
    Merge sort by Jaideep Rana

*/


#include <bits/stdc++.h>
using namespace std;


 void Merge(int*,int,int,int);

 void Mergesort(int* arr,int start,int end)
{
    if(start<end)
    {
        int mid = (start+end)/2;
        
        Mergesort(arr,start,mid);
        Mergesort(arr,mid+1,end);
        Merge(arr,start,mid,end);
    }
}

 void Merge(int* arr,int start,int mid,int end)
{
    int i = start, j = mid+1;
    
    int k =start, extra[(end-start+1)];
    
    while(i<=mid && j<=end)
    {
        if(arr[i]<=arr[j])
        {
            extra[k] = arr[i];
            
            i++;
        }
        
        else
        {
            extra[k] = arr[j];
            j++;
        }
        
        k++;
    }
    
    if(i>mid)
    {
        while(j<=end)
        {
            extra[k] = arr[j];
            j++;
            k++;
        }
    }
    
    else
    {
        extra[k] = arr[i];
        i++;
        k++;
    }
    
   for(int k = start; k<= end;k++)
   {
       arr[k] = extra[k];
   }
    
    cout<<endl;
}

int main()
{
    int n;
    
    cin>>n;
    
    int arr[n];
    
    cout<<"\nEnter each element of array \n";
    
    for(auto &x: arr) cin>>x;
    
    Mergesort(arr,0,n-1);
    
    cout<<"\nAfter merge sort\n";
    
    for(auto item: arr) cout<<item<<" ";
    
    cout<<"\n";
}
